{
    "1": {
        "id": 1,
        "class": "Sequence",
        "name": "",
        "asset-pack": "core",
        "children": [
            "a42dacb0-5ded-4a5c-91a7-e05868f04816",
            "8db6f060-1d44-481b-8df6-17b90470b7ea",
            "7fb7c0c7-f9ee-4b7b-bc67-e73fccea30a7",
            "f615089e-9b01-4ee7-8c27-1e6ee68c462c",
            "009578b6-abf7-448a-9181-e619c976e7d5",
            "7653fd4d-38be-43be-87e8-ca9e72cc9035",
            "c382e28c-8998-4c2c-86c1-7c0afc7e9fdb"
        ],
        "decorators": [
            "10b349de-8e22-41c3-b3f3-80f6ab7f9b7c"
        ],
        "options": {}
    },
    "6": {
        "id": 6,
        "class": "TakePhoto",
        "name": "take photo on shutter-click event",
        "options": {
            "resolution": 2,
            "onPhoto": [
                "(error, imageUrl) => {",
                "  ",
                "  // put the photo's URL on the notepad",
                "  notepad.imageUrl = imageUrl;",
                "  notepad.track = \"Something about us\";",
                "  notepad.selectedEmotion = \"happy\";",
                "  const RapidAPI = require('rapidapi-connect');",
                "  const rapid = new RapidAPI('MusicPainter', '222b060f-6e25-4272-ae8e-a26f235106ce');",
                "  var imgur = require('imgur');",
                "  imgur.setClientId('77b03c9d1fab0cc');",
                "",
                "  ",
                "  let request = require('request').defaults({ encoding: null });",
                "  ",
                "  request(imageUrl, function (error, response, body) {",
                "    if (!error && response.statusCode == 200) {",
                "      notepad.imageData = new Buffer(body).toString('base64');",
                "      ",
                "      imgur.uploadBase64(notepad.imageData)",
                "      .then(function (json) {",
                "        console.log(json.data.link);",
                "        rapid.call('MicrosoftComputerVision', 'analyzeImage', { ",
                "          'image': json.data.link,",
                "          'details': '',",
                "          'visualFeatures': 'color',",
                "          'subscriptionKey': '283c83ce2bfe48a28a46ce0058527069'",
                "        }).on('success', (payload)=>{",
                "          console.log(JSON.parse(payload).color.dominantColors);",
                "          for (var item in JSON.parse(payload).color.dominantColors) {",
                "            for (var emotion in notepad.emotions) {",
                "              if (notepad.emotions[JSON.parse(payload).color.dominantColors[item].toLowerCase()] !== undefined) {",
                "                notepad.selectedEmotion = notepad.emotions[JSON.parse(payload).color.dominantColors[item].toLowerCase()];",
                "              }",
                "            }",
                "          }",
                "          console.log(notepad.selectedEmotion);",
                "          getSongFromEmotion(notepad.selectedEmotion);",
                "        }).on('error', (payload)=>{",
                "          console.log(payload);",
                "        });",
                "        ",
                "        rapid.call('MicrosoftEmotionAPI', 'getEmotionRecognition', { ",
                "          'image': json.data.link,",
                "          'subscriptionKey': '881d70ebd7ce4b64b53e10bb01ab12fd'",
                "        }).on('success', (payload)=>{",
                "          console.log(payload[0]); ",
                "        }).on('error', (payload)=>{",
                "          console.log(payload);",
                "        });",
                "        ",
                "      })",
                "      .catch(function (err) {",
                "        console.error(err.message);",
                "      });",
                "      ",
                "    }",
                "  });",
                "  ",
                "  function getSongFromEmotion(emotion) {",
                "    var LastFmNode = require('lastfm').LastFmNode;",
                "    ",
                "    var lastfm = new LastFmNode({",
                "      api_key: 'd5cf7e62853e8c3cb133872eddf5f139',    // sign-up for a key at http://www.last.fm/api",
                "      secret: '5b1cab3caa7cd10f8911e9c1a7501f68'",
                "    });",
                "    ",
                "    var lastRequest = lastfm.request(\"tag.gettoptracks\", {",
                "      tag: emotion,",
                "      handlers: {",
                "        success: function(data) {",
                "          var track = data.tracks.track[Math.floor(Math.random()*data.tracks.track.length)].name;",
                "          console.log(track);",
                "          rapid.call('SpotifyPublicAPI', 'searchTracks', { ",
                "            'query': track,",
                "            'market': '',",
                "            'limit': '1',",
                "            'offset': ''  ",
                "          }).on('success', function(payload) {",
                "            console.log(JSON.parse(payload).tracks.items[0].preview_url);",
                "            notepad.track = JSON.parse(payload).tracks.items[0].preview_url;",
                "            ",
                "            jibo.sound.add();",
                "            ",
                "            notepad.sound = jibo.sound.add('bleep', {",
                "              ",
                "              src: notepad.track,  // location in file system",
                "              preload: false,              // start loading the sound right away?",
                "              autoPlay: false,             // start playing the sound immediately after loading?",
                "              loop: false,                // loop my sound? (false by default)",
                "              block: false,                // allow other sounds to play over this sound? (false by default)",
                "              useXHR: true,  //commented out, neccesary to use if your src is set to an external URL",
                "            });",
                "            jibo.sound.play('bleep'); ",
                "            ",
                "          }).on('error', function(payload) {",
                "            console.log(payload); ",
                "          });",
                "        },",
                "        error: function(error) {",
                "          console.log(\"Error: \" + error.message);",
                "        }",
                "      }",
                "    });",
                "  }",
                "  ",
                "}"
            ],
            "noDistortion": true
        },
        "asset-pack": "core",
        "parent": "f615089e-9b01-4ee7-8c27-1e6ee68c462c",
        "decorators": [
            "273514a2-af90-4962-8e12-d3a53388d345"
        ]
    },
    "meta": {
        "version": 1
    },
    "7653fd4d-38be-43be-87e8-ca9e72cc9035": {
        "id": "7653fd4d-38be-43be-87e8-ca9e72cc9035",
        "class": "TimeoutJs",
        "name": "pause with photo on screen for 3 seconds",
        "options": {
            "getTime": [
                "() => {",
                "    return 3000;",
                "}"
            ]
        },
        "asset-pack": "core",
        "parent": 1
    },
    "c382e28c-8998-4c2c-86c1-7c0afc7e9fdb": {
        "id": "c382e28c-8998-4c2c-86c1-7c0afc7e9fdb",
        "class": "ExecuteScript",
        "name": "display the eye again",
        "options": {
            "exec": [
                "() => {",
                "  //remove the image from the screen",
                "  jibo.face.stage.removeChild(notepad.photo); ",
                "  ",
                "  //force draw",
                "  jibo.face.update(); ",
                "  ",
                "  //render only when dof values are dirty",
                "  jibo.face.renderOnlyWhenDirty = true; ",
                "}"
            ]
        },
        "asset-pack": "core",
        "parent": 1
    },
    "f615089e-9b01-4ee7-8c27-1e6ee68c462c": {
        "id": "f615089e-9b01-4ee7-8c27-1e6ee68c462c",
        "class": "Parallel",
        "name": "",
        "options": {
            "succeedOnOne": false
        },
        "asset-pack": "core",
        "parent": 1,
        "children": [
            "183e8b3c-372e-4a38-88be-caf4385eaec1",
            "5e54f107-058e-4a4c-bc70-37564778999f",
            6,
            "c3b236c4-0f76-48a4-a8e1-b4cb6d9e4447"
        ]
    },
    "183e8b3c-372e-4a38-88be-caf4385eaec1": {
        "id": "183e8b3c-372e-4a38-88be-caf4385eaec1",
        "class": "PlayAnimation",
        "name": "play the camera animation",
        "options": {
            "animPath": "camera.keys",
            "config": [
                "(animation) => {",
                "}"
            ]
        },
        "asset-pack": "core",
        "parent": "f615089e-9b01-4ee7-8c27-1e6ee68c462c"
    },
    "273514a2-af90-4962-8e12-d3a53388d345": {
        "id": "273514a2-af90-4962-8e12-d3a53388d345",
        "class": "StartOnAnimEvent",
        "name": "",
        "options": {
            "eventName": "shutter-click",
            "onReceived": [
                "(animFileName, payload) => {",
                "}"
            ]
        },
        "asset-pack": "core"
    },
    "009578b6-abf7-448a-9181-e619c976e7d5": {
        "id": "009578b6-abf7-448a-9181-e619c976e7d5",
        "class": "ExecuteScript",
        "name": "",
        "options": {
            "exec": [
                "() => {",
                "  //redraw every frame",
                "  jibo.face.renderOnlyWhenDirty = false; ",
                "  ",
                "  // create new Pixi sprite",
                "  notepad.photo = new PIXI.Sprite();",
                "  ",
                "  // set the texture of the sprite to the imageURL",
                "  notepad.photo.texture = PIXI.Texture.fromImage(notepad.imageUrl);",
                "  ",
                "  // add the sprite to the stage",
                "  jibo.face.stage.addChild(notepad.photo);",
                "",
                "  ",
                "}"
            ]
        },
        "asset-pack": "core",
        "parent": 1
    },
    "7fb7c0c7-f9ee-4b7b-bc67-e73fccea30a7": {
        "id": "7fb7c0c7-f9ee-4b7b-bc67-e73fccea30a7",
        "class": "LookAt",
        "name": "find a face",
        "options": {
            "getTarget": [
                "() => {",
                "  let jibo = require('jibo');",
                "  let entity = jibo.lps.getClosestVisualEntity();",
                "  ",
                "  let position = {x:.5, y:.1, z:.4};",
                "",
                "  if (entity) {",
                "          position = {x: entity.position.x, y: entity.position.y, z: entity.position.z};",
                "  }",
                "",
                "  return position;",
                "}"
            ],
            "isContinuous": true,
            "config": [
                "(lookAt) => {",
                "}"
            ]
        },
        "asset-pack": "core",
        "parent": 1,
        "decorators": [
            "3418a6b5-ede9-4708-b8f9-22697d47c0c6"
        ]
    },
    "8db6f060-1d44-481b-8df6-17b90470b7ea": {
        "id": "8db6f060-1d44-481b-8df6-17b90470b7ea",
        "class": "TextToSpeech",
        "name": "\"say cheese!\"",
        "options": {
            "words": "Say cheese!",
            "onWord": [
                "(word) => {",
                "}"
            ]
        },
        "asset-pack": "core",
        "parent": 1
    },
    "3418a6b5-ede9-4708-b8f9-22697d47c0c6": {
        "id": "3418a6b5-ede9-4708-b8f9-22697d47c0c6",
        "class": "TimeoutSucceed",
        "name": "",
        "options": {
            "timeout": 8000
        },
        "asset-pack": "core"
    },
    "5e54f107-058e-4a4c-bc70-37564778999f": {
        "id": "5e54f107-058e-4a4c-bc70-37564778999f",
        "class": "ExecuteScript",
        "name": "",
        "options": {
            "exec": [
                "() => {",
                "  notepad.emotions = {",
                "    \"black\": \"fear\",",
                "    \"yellow\": \"happy\",",
                "    \"purple\": \"disgust\",",
                "    \"blue\": \"sad\"",
                "  }",
                "}"
            ]
        },
        "asset-pack": "core",
        "parent": "f615089e-9b01-4ee7-8c27-1e6ee68c462c"
    },
    "10b349de-8e22-41c3-b3f3-80f6ab7f9b7c": {
        "id": "10b349de-8e22-41c3-b3f3-80f6ab7f9b7c",
        "class": "WhileCondition",
        "name": "",
        "options": {
            "init": [
                "() => {",
                "}"
            ],
            "conditional": [
                "() => {",
                "    return true;",
                "}"
            ]
        },
        "asset-pack": "core"
    },
    "a42dacb0-5ded-4a5c-91a7-e05868f04816": {
        "id": "a42dacb0-5ded-4a5c-91a7-e05868f04816",
        "class": "Listen",
        "name": "",
        "options": {
            "getOptions": [
                "() => {",
                "    let options = {",
                "        heyJibo: false,",
                "        detectEnd: false,",
                "        incremental: false,",
                "        authenticateSpeaker: ''",
                "    }",
                "    return options;",
                "}"
            ],
            "rule": "order.rule",
            "onResult": [
                "(listener) => {",
                "    listener.on('cloud', function(asrResult, speakerIds) {",
                "        console.log(asrResult.NLParse.photo);",
                "        notepad.case = asrResult.NLParse.photo;",
                "    });",
                "}"
            ]
        },
        "asset-pack": "core",
        "parent": 1
    },
    "c3b236c4-0f76-48a4-a8e1-b4cb6d9e4447": {
        "id": "c3b236c4-0f76-48a4-a8e1-b4cb6d9e4447",
        "class": "Switch",
        "name": "",
        "options": {},
        "asset-pack": "core",
        "parent": "f615089e-9b01-4ee7-8c27-1e6ee68c462c",
        "children": [
            "b76ec2d0-9302-4b11-a04c-b44e9055cab4"
        ]
    },
    "b76ec2d0-9302-4b11-a04c-b44e9055cab4": {
        "id": "b76ec2d0-9302-4b11-a04c-b44e9055cab4",
        "class": "PlayAnimation",
        "name": "",
        "options": {
            "animPath": "Fear.keys",
            "config": [
                "(animation) => {",
                "}"
            ]
        },
        "asset-pack": "core",
        "parent": "c3b236c4-0f76-48a4-a8e1-b4cb6d9e4447",
        "decorators": [
            "d9fc9d34-36c6-47ec-8af1-f4c5c082de01"
        ]
    },
    "d9fc9d34-36c6-47ec-8af1-f4c5c082de01": {
        "id": "d9fc9d34-36c6-47ec-8af1-f4c5c082de01",
        "class": "Case",
        "name": "",
        "options": {
            "conditional": [
                "() => {",
                "  return notepad.selectedEmotion === 'fear';",
                "}"
            ]
        },
        "asset-pack": "core"
    }
}